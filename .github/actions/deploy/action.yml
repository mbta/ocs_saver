name: Deploy
description: Deploys new Lambda function code
inputs:
  aws-role-to-assume:
    description: AWS access key
    required: true
  dry-run:
    description: >-
      If truthy, the deploy will be a dry run, or will not be attempted at all
      if `aws-role-to-assume` is blank (instead of erroring)
    required: false
    default: ""
  environment:
    description: Name of the environment to deploy to (dev/prod)
    required: true
runs:
  using: composite
  steps:
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        aws-region: us-east-1

    - uses: ./.github/actions/deps

    - run: ./build.sh src/packager.ts
      shell: bash
    - run: ./build.sh src/processor.ts
      shell: bash

    - run: >-
        aws lambda update-function-code
        --function-name ocs-saver-${{ inputs.environment }}-packager
        --zip-file fileb://dist/packager.zip
        ${{ inputs.dry-run && '--dry-run' || '' }}
      shell: bash
      if: ${{ !inputs.dry-run || inputs.aws-role-to-assume }}
      env:
        AWS_ROLE_TO_ASSUME: ${{ inputs.aws-role-to-assume }}
        AWS_REGION: us-east-1

    - run: >-
        aws lambda update-function-code
        --function-name ocs-saver-${{ inputs.environment }}-firehose-processor
        --zip-file fileb://dist/processor.zip
        ${{ inputs.dry-run && '--dry-run' || '' }}
      shell: bash
      if: ${{ !inputs.dry-run || inputs.aws-role-to-assume }}
      env:
        AWS_ROLE_TO_ASSUME: ${{ inputs.aws-role-to-assume }}
        AWS_REGION: us-east-1
